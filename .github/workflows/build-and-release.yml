---
name: Build and Release Helix Docker Image

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: read

jobs:
  build-server:
    name: Build Helix Server
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        working-directory: ./server
        run: npm clean-install

      - name: Build
        working-directory: ./server
        run: npm run build

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: server
          path: ./server/build

  build-client:
    name: Build Helix Client
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        working-directory: ./client
        run: npm clean-install

      - name: Build
        working-directory: ./client
        run: npm run ci

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: client
          path: ./client/dist

  docker-image:
    name: Build and Push Docker Image
    needs:
      - build-server
      - build-client
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: helix
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Download Server Artifacts
        uses: actions/download-artifact@v4.1.7
        with:
          name: server
          path: ./server/build

      - name: Download Client Artifacts
        uses: actions/download-artifact@v4.1.7
        with:
          name: client
          path: ./client/dist

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
            ghcr.io/${{ github.actor }}/${{ env.IMAGE_NAME }}

      - name: Build and Push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./main.dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}

  release:
    name: Create Release for Helix
    permissions: write-all
    needs: docker-image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Extract Changelog
        id: get-changelog
        uses: jaywcjlove/github-action-read-file@v1.2.1
        with:
          path: .github/CHANGELOG.md

      - name: Create Release
        uses: comnoco/create-release-action@v2.0.5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Helix ${{ github.ref_name }}
          body: ${{ steps.get-changelog.outputs.content }}
          draft: false
          prerelease: false
